# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "i915" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "none";
      fsType = "tmpfs";
      options = [ "defaults" "size=8G" "mode=755" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/D6ED-7B8C";
      fsType = "vfat";
    };

  fileSystems."/boot-fallback" =
    { device = "/dev/disk/by-uuid/D6ED-BC4A";
      fsType = "vfat";
    };

  boot.initrd.luks.devices."crypt-disk1".device = "/dev/disk/by-uuid/d24c36a7-d39c-4de5-8fc0-33ff0262e964";
  boot.initrd.luks.devices."crypt-disk1".allowDiscards = true;
  boot.initrd.luks.devices."crypt-disk1".bypassWorkqueues = true;
  boot.initrd.luks.devices."crypt-disk2".device = "/dev/disk/by-uuid/cde8caa0-be38-4ff8-a3b3-aa82bc587550";
  boot.initrd.luks.devices."crypt-disk2".allowDiscards = true;
  boot.initrd.luks.devices."crypt-disk2".bypassWorkqueues = true;

  fileSystems."/nix" =
    { device = "/dev/mapper/crypt-disk1";
      fsType = "btrfs";
      options = [ "device=/dev/mapper/crypt-disk2" "subvol=nix" "noatime" "compress=zstd" ];
    };

  fileSystems."/data" =
    { device = "/dev/mapper/crypt-disk1";
      fsType = "btrfs";
      options = [ "device=/dev/mapper/crypt-disk2" "subvol=data" "noatime" "compress=zstd" ];
    };

  fileSystems."/home" =
    { device = "/data/home";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/root" =
    { device = "/data/root";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/etc/nixos" =
    { device = "/data/nixos/neko";
      fsType = "none";
      options = [ "bind" ];
    };

  swapDevices = [ ];

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
